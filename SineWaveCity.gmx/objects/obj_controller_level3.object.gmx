<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.area_width = 850;
global.area_height = 500;

global.points = 100;
global.is_railgun_on = true;
global.railgun_recharge = 50;
global.railgun_vert_recharge = 50;

//a few lasers
alarm_0_count = 24;
alarm[0] = 1*room_speed;

//a few at a time
alarm_1_count = 10;
alarm[1] = 33*room_speed;

//some bombs
alarm_2_count = 16;
alarm[2] = 73*room_speed;

//lasers, more
alarm_3_count = 16;
alarm[3] = 105*room_speed;

//sweeps
alarm_4_count = 3*15;
alarm[4] = 137*room_speed;

x_sweep_x = global.area_width/2;
y_sweep_y = global.area_height/2;
if (random(10) &lt; 5) {
  x_sweep_dir = 1;
  y_sweep_dir = 1;
} else { 
  x_sweep_dir = -1;
  y_sweep_dir = -1;
}

alarm_5_count = 14;
alarm[5] = 152*room_speed;

alarm[6] = 184*room_speed;

//0,16

//33, driving starts
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_no_artificial_flavoring</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("data.ini");
level_3_score = ini_read_real("data", "level_3_score", 0);

if (global.points &gt; level_3_score) {
    ini_write_real("data", "level_3_score", global.points);
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_5_count--;
if (alarm_5_count &gt; 0){
    var x_1 = random(global.area_width/3);
    var x_2 = random(global.area_width/3) + (global.area_width - global.area_width/3);
    var x_begin = min(x_1, x_2);
    var x_end = max(x_1, x_2);
    var width = x_end - x_begin;
    //how many lasers to spawn
    var num = 3;
    if (width &lt; num * global.min_sine_width) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(width/num * i + x_begin, 0, obj_mine);
       }
    }

    var y_1 = random(global.area_height/3);
    var y_2 = random(global.area_height/3) + (global.area_height - global.area_height/3);
    var y_begin = min(y_1, y_2);
    var y_end = max(y_1, y_2);
    var height = y_end - y_begin;
    //how many lasers to spawn
    var num = 3;
    if (height &lt; num * global.min_sine_height) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(0, height/num * i + y_begin, obj_mine_sideways);
       }
    }
    alarm[5] = 2*room_speed;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_4_count--;

//1/25 chance to change direction
if (random(25) &lt; 1) {
  x_sweep_dir = -x_sweep_dir;
}
if (x_sweep_x &gt; global.area_width-25) {
  x_sweep_dir = -1;
} else if(x_sweep_x &lt; 25) {
  x_sweep_dir = 1;
}
x_sweep_x += x_sweep_dir * 10;
instance_create(x_sweep_x, 0, obj_mine);

//1/25 chance to change direction
if (random(25) &lt; 1) {
  y_sweep_dir = -y_sweep_dir;
}
if (y_sweep_y &gt; global.area_height-25) {
  y_sweep_dir = -1;
} else if(y_sweep_y &lt; 25) {
  y_sweep_dir = 1;
}
y_sweep_y += y_sweep_dir * 10;
instance_create(0, y_sweep_y, obj_mine_sideways);

if alarm_4_count &gt; 1 {
alarm[4] = 20;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_3_count--;
if (alarm_3_count &gt; 0){
    var x_1 = random(global.area_width);
    var x_2 = random(global.area_width);
    var x_begin = min(x_1, x_2);
    var x_end = max(x_1, x_2);
    var width = x_end - x_begin;
    //how many lasers to spawn
    var num = 2;
    if (width &lt; num * global.min_sine_width) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(width/num * i + x_begin, 0, obj_mine);
       }
    }

    var y_1 = random(global.area_height);
    var y_2 = random(global.area_height);
    var y_begin = min(y_1, y_2);
    var y_end = max(y_1, y_2);
    var height = y_end - y_begin;
    //how many lasers to spawn
    var num = 2;
    show_debug_message(global.min_sine_height);
    show_debug_message(height);
    if (height &lt; num * global.min_sine_height) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(0, height/num * i + y_begin, obj_mine_sideways);
       }
    }
    alarm[3] = 2*room_speed;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_2_count--;
if (alarm_2_count % 2 == 0) {
  var x_1 = random(400);
  var bomb = instance_create(x_1, 0, obj_bomb_both);
  with(bomb) {
    direction = 270;
  }
} else {
  var y_1 = random(250);
  var bomb = instance_create(0, y_1, obj_bomb_both);
  with(bomb) {
    direction = 0;
    alarm[1] = 180;
  }
}
if (alarm_2_count &gt; 0) {
  alarm[2] = 2*room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_1_count--;
if (alarm_1_count &gt; 0){
    var x_1 = random(global.area_width);
    var x_2 = random(global.area_width);
    var x_begin = min(x_1, x_2);
    var x_end = max(x_1, x_2);
    var width = x_end - x_begin;
    //how many lasers to spawn
    var num = 2;
    if (width &lt; num * global.min_sine_width) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(width/num * i + x_begin, 0, obj_mine);
       }
    }

    var y_1 = random(global.area_height);
    var y_2 = random(global.area_height);
    var y_begin = min(y_1, y_2);
    var y_end = max(y_1, y_2);
    var height = y_end - y_begin;
    //how many lasers to spawn
    var num = 1;
    if (alarm_1_count &lt; 8) {
      num = 2;
    }
    show_debug_message(global.min_sine_height);
    show_debug_message(height);
    if (height &lt; num * global.min_sine_height) {
        num = 1;
    }
    
    {
    var i;
    for (i = 0; i &lt; num; i += 1)
       {
       instance_create(0, height/num * i + y_begin, obj_mine_sideways);
       }
    }
    alarm[1] = 4*room_speed;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (alarm_0_count % 2 == 0) {
var y_1 = random(global.area_height);
instance_create(0, y_1, obj_mine_sideways);
} else {
var x_1 = random(global.area_width);
instance_create(x_1, 0, obj_mine);
}


alarm_0_count--;

interval = 2;
if (alarm_0_count &lt; 16) {
  interval = 1;
}
if (alarm_0_count &gt; 0){
  alarm[0] = interval * room_speed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.railgun_recharge += 1;
global.railgun_vert_recharge += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
